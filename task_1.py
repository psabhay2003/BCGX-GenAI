# -*- coding: utf-8 -*-
"""Task 1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1phNX-Qi8EEmciz7hsnGl8jC0vtwP6x2h
"""

import pandas as pd
df = pd.read_csv('https://raw.githubusercontent.com/psabhay2003/BCGX-GenAI/refs/heads/main/10K.csv')
df

# Convert all numerical columns to standard number format (removing scientific notation)
pd.options.display.float_format = '{:.0f}'.format
df

df.describe()

df.info()

df = df.sort_values(['Company','Year'],ascending=True).groupby('Company').head()
df

revenue = pd.DataFrame(columns=['Company','Year', 'Total Revenue'])
revenue['Company'] = df['Company']
revenue['Year'] = df['Year']
revenue['Total Revenue'] = df['Total Revenue']
revenue['Revenue Growth (%)'] = df.groupby(['Company'])['Total Revenue'].pct_change() * 100
revenue
Revenue_Growth = revenue['Revenue Growth (%)']
df = pd.concat([df, Revenue_Growth], axis=1)
df
#Microsoft and Tesla reported a net positive revenue growth whereas Apple reported a dip of 1% in revenue in the three fiscal years.
#Microsoft reported more than double revenue growth from 2023-24 whereas Tesla reported a massive revenue growth of 19% in 2023.

income = pd.DataFrame(columns=['Company','Year','Net Income','Net Income Growth (%)'])
income['Company'] = df['Company']
income['Year'] = df['Year']
income['Net Income'] = df['Net Income']
income['Net Income Growth (%)'] = df.groupby(['Company'])['Net Income'].pct_change() * 100
income
Net_Income_Growth = income['Net Income Growth (%)']
df = pd.concat([df, Net_Income_Growth], axis=1)
df
#Apple reported a net decrease of 6% in net income from 2022-24, Microsoft reported a net increase of 21% in net income from 2022-24 showing significant improvement.
#Tesla reported a massive dip of a net 33% decrease in income from 2022-24.

assets = pd.DataFrame(columns=['Company','Year','Total Assets','Total Assets Growth (%)'])
assets['Company'] = df['Company']
assets['Year'] = df['Year']
assets['Total Assets'] = df['Total Assets']
assets['Total Assets Growth (%)'] = df.groupby(['Company'])['Total Assets'].pct_change() * 100
assets
Total_Assets_Growth = assets['Total Assets Growth (%)']
df = pd.concat([df, Total_Assets_Growth], axis=1)
df
#Apple, Microsoft, and Tesla reported a net increase of 4%, 37%, 43% respectively in Total Assets Growth from 2022-2024.

liability = pd.DataFrame(columns=['Company','Year','Total Liabilities','Total Liabilities Growth (%)'])
liability['Company'] = df['Company']
liability['Year'] = df['Year']
liability['Total Liabilities'] = df['Total Liabilities']
liability['Total Liabilities Growth (%)'] = df.groupby(['Company'])['Total Liabilities'].pct_change() * 100
liability
Total_Assets_Growth = liability['Total Liabilities Growth (%)']
df = pd.concat([df, Total_Assets_Growth], axis=1)
df
#The total Liabilities Growth showed an increasing trend for all three companies from 2022 to 2024.
#The growth percentage reports a massive increase of 18% in Total Liabilities of Microsoft for the fiscal year 2024, whereas a decrease from 18% to 13% for Tesla for the same fiscal year.

cashflow = pd.DataFrame(columns=['Company','Year','Operating Cash Flow','Cash Flow Growth (%)'])
cashflow['Company'] = df['Company']
cashflow['Year'] = df['Year']
cashflow['Operating Cash Flow'] = df['Operating Cash Flow']
cashflow['Operating Cash Flow Growth (%)'] = df.groupby(['Company'])['Operating Cash Flow'].pct_change() * 100
cashflow
Operating_Cash_Flow_Growth = cashflow['Operating Cash Flow Growth (%)']
df = pd.concat([df, Operating_Cash_Flow_Growth], axis=1)
df
#The operating cashflow rate shows a decreasing trend for all three companies during the fiscal year 2022-23, with Microsoft reporting the least decrease of 2%.
#Although it also shows an increasing trend for all three companies during the fiscal year 2023-24, with Microsoft reporting the highest increase of 35%.

cashflow = pd.DataFrame(columns=['Company','Year','Financing Cash Flow','Cash Flow Growth (%)'])
cashflow['Company'] = df['Company']
cashflow['Year'] = df['Year']
cashflow['Financing Cash Flow'] = df['Financing Cash Flow']
cashflow['Financing Cash Flow Growth (%)'] = df.groupby(['Company'])['Financing Cash Flow'].pct_change() * 100
cashflow
Financing_Cash_Flow_Growth = cashflow['Financing Cash Flow Growth (%)']
df = pd.concat([df, Financing_Cash_Flow_Growth], axis=1)
df
#The financing cashflow rate shows a decreasing trend for all three companies during the fiscal year 2022-23, with Apple reporting the least decrease of 2%.
#Although it also shows an increasing trend for all three companies during the fiscal year 2023-24, with Tesla reporting the highest increase of 49%.

cashflow = pd.DataFrame(columns=['Company','Year','Investing Cash Flow','Cash Flow Growth (%)'])
cashflow['Company'] = df['Company']
cashflow['Year'] = df['Year']
cashflow['Investing Cash Flow'] = df['Investing Cash Flow']
cashflow['Investing Cash Flow Growth (%)'] = df.groupby(['Company'])['Investing Cash Flow'].pct_change() * 100
cashflow
Investing_Cash_Flow_Growth = cashflow['Investing Cash Flow Growth (%)']
df = pd.concat([df, Investing_Cash_Flow_Growth], axis=1)
df
#The investing cashflow rate show very skewed trend for all three companies.

gross_margin = pd.DataFrame(columns=['Company','Year','Gross Margin','Gross Margin Growth (%)'])
gross_margin['Company'] = df['Company']
gross_margin['Year'] = df['Year']
gross_margin['Gross Margin'] = df['Gross Margin']
gross_margin['Gross Margin Growth (%)'] = df.groupby(['Company'])['Gross Margin'].pct_change() * 100
gross_margin
Gross_Margin_Growth = gross_margin['Gross Margin Growth (%)']
df = pd.concat([df, Gross_Margin_Growth], axis=1)
df
#The gross margin growth reported a decreasing trend for Apple and Tesla but an increasing trend for Microsoft in the fiscal year 2022-23.
#The gross margin growth reported an increasing trend for all three companies with Microsoft reporting the highest increase of 17% during the fiscal year 2023-24.

#Adding a new feature 'Profit Margin'
def calculate_profit_margin(row):
  net_income = row['Net Income']
  total_revenue = row['Total Revenue']
  Profit_Margin = (net_income / total_revenue) * 100
  return Profit_Margin
df['Profit_Margin'] = df.apply(calculate_profit_margin, axis=1)
df

#Adding a new feature 'Return on Assets(ROA)'
def calculate_roa(row):
  net_income = row['Net Income']
  total_assets = row['Total Assets']
  ROA = (net_income / total_assets) * 100
  return ROA
df['ROA'] = df.apply(calculate_roa, axis=1)
df

#Adding a new feature 'Return on Equity(ROE)'
def calculate_roe(row):
  net_income = row['Net Income']
  equity = row['Total Assets'] - row['Total Liabilities']
  ROE = (net_income / equity) * 100
  return ROE
df['ROE'] = df.apply(calculate_roe, axis=1)
df

# Generate Question-Answer Pairs
qa_pairs = []
for index, row in df.iterrows():
    qa_pairs.append((f"What is {row['Company']}'s revenue in {row['Year']}?", f"{row['Total Revenue']}"))
    qa_pairs.append((f"What is {row['Company']}'s net income in {row['Year']}?", f"{row['Net Income']}"))
    qa_pairs.append((f"What are {row['Company']}'s total assets in {row['Year']}?", f"{row['Total Assets']}"))
    qa_pairs.append((f"What are {row['Company']}'s total liabilities in {row['Year']}?", f"{row['Total Liabilities']}"))
    qa_pairs.append((f"What is {row['Company']}'s operating cashflow in {row['Year']}?", f"{row['Operating Cash Flow']}"))
    qa_pairs.append((f"What is {row['Company']}'s financing cashflow in {row['Year']}?", f"{row['Financing Cash Flow']}"))
    qa_pairs.append((f"What is {row['Company']}'s investing cashflow in {row['Year']}?", f"{row['Investing Cash Flow']}"))
    qa_pairs.append((f"What is {row['Company']}'s gross margin in {row['Year']}?", f"{row['Gross Margin']}"))
    qa_pairs.append((f"What is {row['Company']}'s revenue growth in {row['Year']}?", f"{row['Revenue Growth (%)']}"))
    qa_pairs.append((f"What is {row['Company']}'s net income growth in {row['Year']}?", f"{row['Net Income Growth (%)']}"))
    qa_pairs.append((f"What is {row['Company']}'s total assets growth in {row['Year']}?", f"{row['Total Assets Growth (%)']}"))
    qa_pairs.append((f"What is {row['Company']}'s total liabilities growth in {row['Year']}?", f"{row['Total Liabilities Growth (%)']}"))
    qa_pairs.append((f"What is {row['Company']}'s operating cashflow growth in {row['Year']}?", f"{row['Operating Cash Flow Growth (%)']}"))
    qa_pairs.append((f"What is {row['Company']}'s financing cashflow growth in {row['Year']}?", f"{row['Financing Cash Flow Growth (%)']}"))
    qa_pairs.append((f"What is {row['Company']}'s investing cashflow growth in {row['Year']}?", f"{row['Investing Cash Flow Growth (%)']}"))
    qa_pairs.append((f"What is {row['Company']}'s gross margin growth in {row['Year']}?", f"{row['Gross Margin Growth (%)']}"))
    qa_pairs.append((f"What is {row['Company']}'s profit margin in {row['Year']}?", f"{row['Profit_Margin']}"))
    qa_pairs.append((f"What is {row['Company']}'s return on assets in {row['Year']}?", f"{row['ROA']}"))
    qa_pairs.append((f"What is {row['Company']}'s return on equity in {row['Year']}?", f"{row['ROE']}"))

# Convert to DataFrame
qa_df = pd.DataFrame(qa_pairs, columns=["question", "response"])
qa_df.to_csv("financial_chatbot_data.csv", index=False)
qa_df

qa_df.replace("nan", np.nan, inplace=True)
qa_df = qa_df.dropna()
qa_df

'''import os
os.makedirs('/mnt/data', exist_ok=True)
qa_df.to_csv('/mnt/data/financial_chatbot_data.csv', index=False)
from google.colab import files
files.download("/mnt/data/financial_chatbot_data.csv")'''